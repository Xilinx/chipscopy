# -*- coding: utf-8 -*-
#
# Copyright (C) 2021-2022, Xilinx, Inc.
# Copyright (C) 2022-2024, Advanced Micro Devices, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
from datetime import datetime

from recommonmark.transform import AutoStructify
from recommonmark.parser import CommonMarkParser
import logging as pylogging
from sphinx.application import Sphinx
from sphinx.util import logging

# sys.path.insert required when chipscopy package not installed...
sys.path.insert(0, os.path.abspath(".."))
import chipscopy.vivado_version
from chipscopy.vivado_version import __vivado_version__


# -- Project information -----------------------------------------------------


author = "Advanced Micro Devices, Inc"
project = "ChipScoPy"
project_u = project.replace(" ", "_")
YYYY = datetime.now().strftime("%Y")
copyright = f"(C) 2021-2022, Xilinx, Inc., Copyright (C) 2022-{YYYY}, Advanced Micro Devices, Inc"
# copyright = "2021-" + datetime.now().strftime("%Y") + ", " + author)
# YYYY = First year of copyright

# The short X.Y version
version = chipscopy.vivado_version.__vivado_version__
# The full version, including alpha/beta/rc tags
release = chipscopy.__version__

html_last_updated_fmt = datetime.now().strftime("%B %d, %Y")

# The master toctree document.
master_doc = "index"

# If true, figures, tables and code-blocks are automatically numbered if they have a caption. The numref role is enabled. Obeyed so far only by HTML and LaTeX builders. Default is False.
numfig = True

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "sphinx_autodoc_typehints",
    "sphinx.ext.doctest",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx.ext.mathjax",
    "sphinx.ext.ifconfig",
    "sphinx.ext.viewcode",
    "sphinx.ext.githubpages",
    "recommonmark",
    "sphinx_markdown_tables",
    "sphinx.ext.autosectionlabel",
    # 'edit_on_github',
]

# Prefix document path to section labels, otherwise autogenerated labels would look like 'heading'
# rather than 'path/to/file:heading'
autosectionlabel_prefix_document = True

# Configure 'Edit on GitHub' extension
edit_on_github_project = "Xilinx/chipscopy"
edit_on_github_branch = "master"

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
# source_suffix = ['.rst', '.md']
source_suffix = {
    ".rst": "restructuredtext",
    ".md": "markdown",
    #'.txt': 'restructuredtext',
}

# For MD support
source_parsers = {
    ".md": CommonMarkParser,
}

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None

# -- Options for HTML output -------------------------------------------------

# If true, the reST sources are included in the HTML build as _sources/name. The default is True.
html_copy_source = False

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "xilinx"
html_theme_path = ["./_themes"]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_favicon = "_static/favicon.ico"
html_logo = "_static/xilinx-header-logo.svg"
html_theme_options = {
    "logo_only": False,
    "style_nav_header_background": "black",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]
html_css_files = ["_static/custom.css"]

rst_epilog = """
.. |ced_link| replace:: `ChipScoPy CED <https://github.com/Xilinx/XilinxCEDStore/tree/{0}/ced/Xilinx/IPI/chipscopy>`__
"""


# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {
#    '**': [
#        'about.html',
#        'navigation.html',
#        'relations.html',
#        'searchbox.html',
#        'donate.html',
#    ]}

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "chipscopy"


# -- Extension configuration -------------------------------------------------
# At the bottom of conf.py


def replace_vivado_version(app: Sphinx, docname: str, source: list):
    doc_str = source[0]
    updated_doc_str = doc_str.replace("|vivado_v|", version)
    source[0] = updated_doc_str


def setup(app: Sphinx):
    app.connect("source-read", replace_vivado_version)
    app.add_config_value(
        "recommonmark_config",
        {
            "url_resolver": lambda url: github_doc_root + url,
            "auto_toc_tree_section": "Contents",
        },
        True,
    )
    app.add_transform(AutoStructify)
    app.add_css_file("custom.css")
    # Expand/Collapse functionality


# -- Sphinx Warning Silencing  -----------------------------------------------


class FilterForForwardReference(pylogging.Filter):
    # Workaround for Forward Reference Warnings
    def filter(self, record: pylogging.LogRecord) -> bool:
        # Fixes WARNING: Cannot resolve forward reference in type annotations of
        #     "chipscopy.api.ibert.link.Link.eye_scan": name 'EyeScan' is not defined
        return not record.getMessage().startswith(
            "Cannot resolve forward reference in type annotations of"
        )


logging.getLogger("sphinx_autodoc_typehints").logger.addFilter(FilterForForwardReference())
